/* Media queries */
/* Visibility queries */
@import url(https://fonts.googleapis.com/css?family=Comfortaa:400,700);
.mobile {
  display: inline-block; }

.mobile-tablet {
  display: inline-block; }

.tablet {
  display: none; }

.tablet-desktop {
  display: none; }

.desktop {
  display: none; }

@media only screen and (min-width: 600px) {
  /* Visibility queries */
  .mobile {
    display: none; }
  .mobile-tablet {
    display: inline-block; }
  .tablet {
    display: inline-block; }
  .tablet-desktop {
    display: inline-block; }
  .desktop {
    display: none; } }

@media only screen and (min-width: 750px) {
  /* Visibility queries */
  .mobile {
    display: none; }
  .mobile-tablet {
    display: none; }
  .tablet {
    display: none; }
  .tablet-desktop {
    display: inline-block; }
  .desktop {
    display: inline-block; } }

.container {
  margin: 0 10px; }
  @media only screen and (min-width: 600px) {
    .container {
      max-width: 1140px;
      margin-left: auto;
      margin-right: auto; }
      .container:after {
        content: " ";
        display: block;
        clear: both; } }

@font-face {
  font-family: 'Glacial Indifference';
  src: url("../../fonts/GlacialIndifference-Regular.otf");
  font-style: normal; }

@font-face {
  font-family: 'Muli';
  src: url("../../fonts/Muli-ExtraLight.ttf") format("truetype");
  font-weight: 100;
  font-style: normal; }

@font-face {
  font-family: 'Muli';
  src: url("../../fonts/Muli-Semibold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal; }

/* Colours */
h1 {
  font-family: "Comfortaa", cursive;
  font-size: 32px;
  line-height: 36px;
  font-weight: 700;
  letter-spacing: 0px;
  color: #FFF;
  color: #FFFFFF;
  padding: 30px 10px;
  margin: 0; }

h2 {
  font-family: "Comfortaa", cursive;
  font-size: 30px;
  line-height: 31px;
  letter-spacing: 1px;
  font-weight: normal;
  color: #54585B;
  padding: 10px 0;
  margin: 0; }

h3 {
  font-family: "Comfortaa", cursive;
  font-size: 30px;
  line-height: 48px;
  font-weight: 700;
  color: #54585B;
  text-align: center;
  padding: 20px 0 24px;
  margin: 0; }

h4 {
  font-family: "Glacial Indifference", Arial, sans-serif;
  font-size: 20px;
  line-height: 24px;
  font-weight: 400;
  color: #000000;
  text-align: center;
  padding: 5px 0;
  margin: 0; }

p {
  font-family: "Glacial Indifference", Arial, sans-serif;
  font-size: 18px;
  line-height: 24px;
  color: #676769;
  text-align: left;
  padding: 0px;
  margin: 0px; }

a {
  font-family: "Muli", serif;
  font-size: 18px;
  line-height: 19px;
  font-weight: 700;
  word-spacing: -1px;
  color: #317FE3;
  text-decoration: underline; }

.flexslider {
  background-color: #ECECEC;
  margin: 0;
  border: 0; }

.flex-control-nav {
  bottom: 27px; }

.flex-control-paging li {
  margin: 0 0.47em; }
  .flex-control-paging li a {
    width: 10px;
    height: 10px;
    background-color: #D5D9DC;
    box-shadow: 0 0 0 transparent; }
    .flex-control-paging li a.flex-active, .flex-control-paging li a:hover {
      background-color: #00B5D5; }

header {
  position: relative;
  z-index: 2; }
  header .mobile_header {
    display: block;
    background-color: #26252A;
    height: 70px;
    border-top: 10px solid #000000;
    *zoom: 1;
    width: 100%;
    position: relative; }
    header .mobile_header:before, header .mobile_header:after {
      content: " ";
      display: block !important; }
    header .mobile_header:after {
      clear: both; }
    header .mobile_header .eir_logo {
      display: inline-block;
      width: 122px;
      height: 84px;
      background-size: 122px 84px;
      background: url("../../img/eir_logo.png") no-repeat center center;
      position: absolute;
      top: -6px;
      left: 7px; }
      @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
        header .mobile_header .eir_logo {
          background-size: 122px 84px;
          background-image: url("../../img/eir_logo@2x.png");
          background-position: center center; } }
    header .mobile_header .menu_burger_icon {
      display: inline-block;
      width: 30px;
      height: 26px;
      background-size: 30px 26px;
      background: url("../../img/burger_icon.png") no-repeat center center;
      float: right;
      padding-top: 44px;
      cursor: pointer; }
      @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
        header .mobile_header .menu_burger_icon {
          background-size: 30px 26px;
          background-image: url("../../img/burger_icon@2x.png");
          background-position: center center; } }
  header .desktop_header {
    display: none; }
  @media only screen and (min-width: 750px) {
    header .mobile_header {
      display: none; }
    header .desktop_header {
      display: block; }
    header ul {
      list-style-type: none;
      padding: 0;
      margin: 0; }
      header ul li {
        display: inline-block; }
        header ul li a {
          text-decoration: none; }
    header .menus_wrap {
      width: 98.24561%;
      float: left;
      margin-left: 0.87719%;
      margin-right: 0.87719%; }
    header .nav_row1 {
      background-color: #000000;
      padding: 12px 0px 11px; }
      header .nav_row1 ul.left_menu {
        float: left; }
        header .nav_row1 ul.left_menu li {
          padding-right: 43px; }
      header .nav_row1 ul.right_menu {
        float: right; }
        header .nav_row1 ul.right_menu li {
          padding-left: 43px; }
      header .nav_row1 a {
        font-family: "Muli", serif;
        font-size: 12px;
        line-height: 13px;
        font-weight: 200;
        color: #FFFFFF;
        text-transform: lowercase;
        letter-spacing: 0.02em; }
    header .nav_row2 {
      background-color: #26252A;
      height: 87px; }
      header .nav_row2 .menus_wrap {
        position: relative; }
      header .nav_row2 .eir_logo {
        display: inline-block;
        width: 159px;
        height: 109px;
        background-size: 159px 109px;
        background: url("../../img/eir_logo_desk.png") no-repeat center center;
        position: absolute;
        top: -11px;
        left: -3px; } }
    @media only screen and (min-width: 750px) and (min--moz-device-pixel-ratio: 1.3), only screen and (min-width: 750px) and (-o-min-device-pixel-ratio: 2.6 / 2), only screen and (min-width: 750px) and (-webkit-min-device-pixel-ratio: 1.3), only screen and (min-width: 750px) and (min-device-pixel-ratio: 1.3), only screen and (min-width: 750px) and (min-resolution: 1.3dppx) {
      header .nav_row2 .eir_logo {
        background-size: 159px 109px;
        background-image: url("../../img/eir_logo_desk@2x.png");
        background-position: center center; } }
  @media only screen and (min-width: 750px) {
      header .nav_row2 ul {
        text-align: right;
        padding: 52px 0 0; }
        header .nav_row2 ul li {
          margin: 0 1.93%; }
          header .nav_row2 ul li:first-child {
            margin-left: 0; }
            header .nav_row2 ul li:first-child a {
              padding-left: 0; }
          header .nav_row2 ul li:last-child {
            margin-right: 0; }
            header .nav_row2 ul li:last-child a {
              padding-right: 0; }
          header .nav_row2 ul li a {
            font-family: "Comfortaa", cursive;
            font-size: 14px;
            line-height: 19px;
            font-weight: 400;
            color: #FFFFFF;
            padding: 0 2px 12px;
            margin: 0; }
            header .nav_row2 ul li a.selected {
              border-bottom: 5px solid #00B5D5; }
    header .subnav {
      height: 72px; }
      header .subnav ul {
        text-align: right;
        padding: 27px 0 0; }
        header .subnav ul li {
          margin: 0 3.2%; }
          header .subnav ul li:first-child {
            margin-left: 0; }
          header .subnav ul li:last-child {
            margin-right: -1px; }
          header .subnav ul li a {
            font-family: "Muli", serif;
            font-size: 15px;
            line-height: 19px;
            font-weight: 700;
            color: #26252A;
            padding: 0 0 20px;
            margin: 0; }
            header .subnav ul li a.selected {
              color: #00B5D5;
              border-bottom: 5px solid #00B5D5; } }
  @media only screen and (min-width: 860px) {
    header .nav_row2 ul li a {
      font-size: 16px;
      line-height: 19px;
      padding: 0 6px 11px; } }
  @media only screen and (min-width: 1000px) {
    header .nav_row2 ul li a {
      font-size: 17px;
      line-height: 19px;
      padding: 0 8px 10px; } }
  @media only screen and (min-width: 860px) {
    header .subnav ul li a {
      font-size: 17px;
      line-height: 19px;
      padding: 0 0 18px; } }
  @media only screen and (min-width: 1000px) {
    header .subnav ul li a {
      font-size: 18px;
      line-height: 19px; } }

footer {
  background-color: #000000;
  float: left;
  font-family: "Glacial Indifference", Arial, sans-serif;
  padding: 45px 0 20px;
  position: relative;
  z-index: 2; }
  footer ul {
    list-style-type: none;
    padding: 0;
    margin: 0; }
    footer ul li {
      display: inline-block; }
      footer ul li a {
        text-decoration: none; }
  footer .footer_row1 {
    text-align: center;
    float: left;
    width: 100%; }
    footer .footer_row1 .scroll_top {
      display: inline-block;
      color: #FFFFFF;
      font-size: 17px;
      font-weight: 400;
      padding: 0 0 0 44px;
      position: relative;
      cursor: pointer; }
      footer .footer_row1 .scroll_top:before {
        content: "";
        width: 20px;
        height: 12px;
        background-size: 20px 12px;
        background: url("../../img/arrow_up.png") no-repeat center center;
        position: absolute;
        top: 3px;
        left: 13px; }
        @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
          footer .footer_row1 .scroll_top:before {
            background-size: 20px 12px;
            background-image: url("../../img/arrow_up@2x.png");
            background-position: center center; } }
  footer .footer_row2 {
    float: left;
    padding: 9px 0; }
    footer .footer_row2 ul li {
      width: 100%;
      padding: 6px 0; }
      footer .footer_row2 ul li:last-child {
        padding-bottom: 8px; }
      footer .footer_row2 ul li.list_head {
        font-family: "Glacial Indifference", Arial, sans-serif;
        color: #FFFFFF;
        font-size: 17px;
        font-weight: 400;
        padding: 14px 0 9px; }
      footer .footer_row2 ul li a {
        font-family: "Muli", serif;
        font-size: 15px;
        line-height: 16px;
        font-weight: 200;
        color: #FFFFFF; }
    footer .footer_row2 .products, footer .footer_row2 .support, footer .footer_row2 .websites, footer .footer_row2 .group {
      width: 44.73684%;
      float: left;
      margin-left: 2.63158%;
      margin-right: 2.63158%; }
    footer .footer_row2 .support > ul, footer .footer_row2 .group > ul {
      padding-left: 15%; }
    footer .footer_row2 .contact {
      width: 63.15789%;
      float: left;
      margin-left: 1.75439%;
      margin-right: 1.75439%;
      padding-left: 16.66667%;
      text-align: center; }
  footer .footer_row3 {
    float: left;
    width: 100%;
    text-align: center;
    padding: 29px 0 15px; }
    footer .footer_row3 a {
      display: inline-block;
      width: 30px;
      height: 30px;
      padding: 0 8px;
      margin: 0 15px; }
  footer .footer_row4 {
    float: left;
    text-align: center;
    padding: 15px 0; }
    footer .footer_row4 ul {
      width: 100%; }
      footer .footer_row4 ul li {
        padding: 7px 2.5%; }
        footer .footer_row4 ul li a {
          font-family: "Glacial Indifference", Arial, sans-serif;
          color: #FFFFFF;
          font-size: 17px;
          font-weight: 400;
          padding: 7px 0 10px; }
  footer .footer_row5 {
    float: left;
    text-align: center;
    padding: 7px 0; }
    footer .footer_row5 p {
      font-family: "Muli", serif;
      font-size: 11px;
      line-height: 18px;
      font-weight: 200;
      text-align: center;
      color: #FFFFFF; }
  @media only screen and (min-width: 600px) {
    footer {
      float: none; }
      footer .footer_row1 {
        text-align: right; }
      footer .footer_row2 .products, footer .footer_row2 .support, footer .footer_row2 .websites, footer .footer_row2 .group, footer .footer_row2 .contact {
        width: 17.89474%;
        float: left;
        margin-left: 1.05263%;
        margin-right: 1.05263%; }
      footer .footer_row2 .support > ul, footer .footer_row2 .group > ul {
        padding-left: 0; }
      footer .footer_row2 .contact {
        padding-left: 0%;
        text-align: left; } }

/* 
 * 	Default theme - Owl Carousel CSS File
 */
.owl-theme .owl-nav {
  margin-top: 26px;
  text-align: center;
  -webkit-tap-highlight-color: transparent; }
  @media only screen and (min-width: 600px) {
    .owl-theme .owl-nav {
      margin-top: 56px; } }
  .owl-theme .owl-nav [class*='owl-'] {
    color: #FFF;
    font-size: 14px;
    margin: 5px;
    padding: 4px 7px;
    background: #D6D6D6;
    display: inline-block;
    cursor: pointer;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-radius: 3px; }
    .owl-theme .owl-nav [class*='owl-']:hover {
      background: #869791;
      color: #FFF;
      text-decoration: none; }
  .owl-theme .owl-nav .disabled {
    opacity: 0.5;
    cursor: default; }

.owl-theme .owl-nav.disabled + .owl-dots {
  margin-top: 10px; }

.owl-theme .owl-dots {
  text-align: center;
  -webkit-tap-highlight-color: transparent; }
  .owl-theme .owl-dots .owl-dot {
    display: inline-block;
    zoom: 1;
    *display: inline; }
    .owl-theme .owl-dots .owl-dot span {
      width: 10px;
      height: 10px;
      margin: 5px 7px;
      background: #D5D9DC;
      display: block;
      -webkit-backface-visibility: visible;
      -webkit-transition: opacity 200ms ease;
      -moz-transition: opacity 200ms ease;
      -ms-transition: opacity 200ms ease;
      -o-transition: opacity 200ms ease;
      transition: opacity 200ms ease;
      -webkit-border-radius: 30px;
      -moz-border-radius: 30px;
      border-radius: 30px; }
    .owl-theme .owl-dots .owl-dot.active span, .owl-theme .owl-dots .owl-dot:hover span {
      background: #00B5D5; }

/* 
 * 	Owl Carousel - Auto Height Plugin
 */
.owl-height {
  -webkit-transition: height 500ms ease-in-out;
  -moz-transition: height 500ms ease-in-out;
  -ms-transition: height 500ms ease-in-out;
  -o-transition: height 500ms ease-in-out;
  transition: height 500ms ease-in-out; }

/* 
 *  Core Owl Carousel CSS File
 */
.owl-carousel {
  display: none;
  width: 100%;
  -webkit-tap-highlight-color: transparent;
  /* position relative and z-index fix webkit rendering fonts issue */
  position: relative;
  z-index: 1; }
  .owl-carousel .owl-stage {
    position: relative;
    -ms-touch-action: pan-Y; }
  .owl-carousel .owl-stage:after {
    content: ".";
    display: block;
    clear: both;
    visibility: hidden;
    line-height: 0;
    height: 0; }
  .owl-carousel .owl-stage-outer {
    position: relative;
    overflow: hidden;
    /* fix for flashing background */
    -webkit-transform: translate3d(0px, 0px, 0px); }
  .owl-carousel .owl-item {
    position: relative;
    min-height: 1px;
    float: left;
    -webkit-backface-visibility: hidden;
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none; }
  .owl-carousel .owl-item img {
    display: block;
    width: 100%;
    -webkit-transform-style: preserve-3d; }
  .owl-carousel .owl-nav.disabled,
  .owl-carousel .owl-dots.disabled {
    display: none; }
  .owl-carousel .owl-nav .owl-prev,
  .owl-carousel .owl-nav .owl-next,
  .owl-carousel .owl-dot {
    cursor: pointer;
    cursor: hand;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none; }
  .owl-carousel.owl-loaded {
    display: block; }
  .owl-carousel.owl-loading {
    opacity: 0;
    display: block; }
  .owl-carousel.owl-hidden {
    opacity: 0; }
  .owl-carousel.owl-refresh .owl-item {
    display: none; }
  .owl-carousel.owl-drag .owl-item {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none; }
  .owl-carousel.owl-grab {
    cursor: move;
    cursor: -webkit-grab;
    cursor: -o-grab;
    cursor: -ms-grab;
    cursor: grab; }
  .owl-carousel.owl-rtl {
    direction: rtl; }
  .owl-carousel.owl-rtl .owl-item {
    float: right; }

/* No Js */
.no-js .owl-carousel {
  display: block; }

/* 
 * 	Owl Carousel - Lazy Load Plugin
 */
.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  -webkit-transition: opacity 400ms ease;
  -moz-transition: opacity 400ms ease;
  -ms-transition: opacity 400ms ease;
  -o-transition: opacity 400ms ease;
  transition: opacity 400ms ease; }

.owl-carousel .owl-item img {
  transform-style: preserve-3d; }

.broadband_landing {
  background-color: #ECECEC;
  position: relative;
  z-index: 1; }
  .broadband_landing .banner h1 {
    width: 300px; }
  .broadband_landing .banner .slide {
    height: 452px; }
    .broadband_landing .banner .slide a.cta_banner {
      width: 140px;
      height: 140px;
      text-decoration: none;
      background-color: #8C00EF;
      border-radius: 50%;
      display: table;
      float: left;
      margin: 164px 0 0 8px; }
      .broadband_landing .banner .slide a.cta_banner span {
        font-family: Comfortaa,cursive;
        font-size: 21px;
        line-height: 24px;
        font-weight: 400;
        color: #FFF;
        vertical-align: middle;
        padding: 0 25%;
        text-align: center;
        text-decoration: none;
        display: table-cell; }
    .broadband_landing .banner .slide.slide1 {
      width: auto;
      height: 452px;
      background-size: auto 452px;
      background: url("../../img/green_phone_mob.jpg") no-repeat center center; }
      @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
        .broadband_landing .banner .slide.slide1 {
          background-size: auto 452px;
          background-image: url("../../img/green_phone_mob@2x.jpg");
          background-position: center center; } }
  .broadband_landing .banner + .container {
    *zoom: 1;
    width: 100%; }
    .broadband_landing .banner + .container:before, .broadband_landing .banner + .container:after {
      content: " ";
      display: block !important; }
    .broadband_landing .banner + .container:after {
      clear: both; }
    .broadband_landing .banner + .container h3 {
      font-size: 24px;
      line-height: 29px;
      padding: 39px 0 20px; }
  .broadband_landing .carousel {
    display: none; }
  .broadband_landing .testing {
    width: 98.24561%;
    float: left;
    margin-left: 0.87719%;
    margin-right: 0.87719%; }
  .broadband_landing .testing2 {
    width: 14.91228%;
    float: left;
    margin-left: 0.87719%;
    margin-right: 0.87719%;
    margin-left: 31.57895%; }
  .broadband_landing .testing3 {
    width: 14.91228%;
    float: left;
    margin-left: 0.87719%;
    margin-right: 0.87719%;
    margin-left: 48.24561%; }
  .broadband_landing .col {
    width: 6.57895%;
    float: left;
    margin-left: 0.87719%;
    margin-right: 0.87719%;
    background-color: cyan;
    height: 100%; }
    .broadband_landing .col.last {
      width: 6.57895%;
      float: left;
      margin-left: 0.87719%;
      margin-right: 0.87719%; }
  .broadband_landing .no_grid {
    -moz-box-sizing: content-box;
    -webkit-box-sizing: content-box;
    box-sizing: content-box;
    margin-right: -10px;
    margin-left: -10px;
    padding-right: 10px;
    padding-left: 10px;
    float: left; }
    @media only screen and (min-width: 600px) {
      .broadband_landing .no_grid {
        width: 98.24561%;
        float: left;
        margin-left: 0.87719%;
        margin-right: 0.87719%;
        padding: 0;
        overflow: hidden; } }
  .broadband_landing .large_feature, .broadband_landing .triple_feature {
    width: 100%;
    float: left; }
  .broadband_landing p.sub {
    text-align: center;
    font-size: 20px;
    line-height: 24px;
    padding-bottom: 25px; }
  .broadband_landing .triple_feature {
    background-color: #FFFFFF;
    border-bottom: 4px dotted #ECECEC;
    border-bottom-style: dotted;
    padding: 25px 0;
    text-align: center;
    box-sizing: border-box; }
  .broadband_landing .featurebox {
    width: 31.57895%;
    float: left;
    margin-left: 0.87719%;
    margin-right: 0.87719%;
    background-color: blue;
    height: 200px; }
  .broadband_landing .testimonials_wrap {
    background-color: #FFFFFF;
    padding: 60px 0 39px; }
    .broadband_landing .testimonials_wrap .testimonial {
      text-align: center; }
      .broadband_landing .testimonials_wrap .testimonial img {
        width: 100px;
        margin: 0px auto;
        border-radius: 50%; }
      .broadband_landing .testimonials_wrap .testimonial p {
        text-align: center;
        font-size: 20px;
        padding: 26px 0 19px;
        color: #68686a; }
        .broadband_landing .testimonials_wrap .testimonial p.customer_name_location {
          font-size: 12px;
          line-height: 21px;
          font-weight: 700;
          font-family: Muli;
          padding: 0; }
  .broadband_landing .help_grid {
    *zoom: 1;
    width: 100%;
    overflow: hidden; }
    .broadband_landing .help_grid:before, .broadband_landing .help_grid:after {
      content: " ";
      display: block !important; }
    .broadband_landing .help_grid:after {
      clear: both; }
  .broadband_landing .help_row {
    overflow: hidden; }
    @media only screen and (min-width: 600px) {
      .broadband_landing .help_row {
        display: inline; } }
  .broadband_landing .help_box {
    box-sizing: border-box;
    background-color: #ECECEC;
    border: 10px solid #FFFFFF;
    margin-bottom: -99999px;
    padding-bottom: 99999px; }
    .broadband_landing .help_box.support, .broadband_landing .help_box.contact {
      float: left;
      width: 50%;
      border-left: 0;
      text-align: center; }
      @media only screen and (min-width: 600px) {
        .broadband_landing .help_box.support, .broadband_landing .help_box.contact {
          border: 0;
          width: 23.24561%;
          float: left;
          margin-left: 0.87719%;
          margin-right: 0.87719%; } }
    .broadband_landing .help_box.chat, .broadband_landing .help_box.store {
      float: right;
      *zoom: 1;
      width: 100%;
      width: 50%;
      border-right: 0;
      text-align: center; }
      .broadband_landing .help_box.chat:before, .broadband_landing .help_box.chat:after, .broadband_landing .help_box.store:before, .broadband_landing .help_box.store:after {
        content: " ";
        display: block !important; }
      .broadband_landing .help_box.chat:after, .broadband_landing .help_box.store:after {
        clear: both; }
      @media only screen and (min-width: 600px) {
        .broadband_landing .help_box.chat, .broadband_landing .help_box.store {
          border: 0;
          width: 23.24561%;
          float: left;
          margin-left: 0.87719%;
          margin-right: 0.87719%; } }
  .broadband_landing section.section2 .container {
    background-color: #ECECEC;
    text-align: center; }
    .broadband_landing section.section2 .container p {
      font-size: 20px;
      line-height: 24px;
      color: #26252A; }
  @media only screen and (min-width: 600px) {
    .broadband_landing .banner > .slide {
      display: none; }
    .broadband_landing .banner h1 {
      padding: 50px 25px;
      font-size: 41px;
      line-height: 46px;
      font-weight: 400;
      width: 540px; }
    .broadband_landing .banner .carousel {
      display: block; }
      .broadband_landing .banner .carousel .slide {
        height: 400px;
        background-color: #26252A; }
        .broadband_landing .banner .carousel .slide a.cta_banner {
          margin: 81px 0 0 11px; }
      .broadband_landing .banner .carousel .slide1 {
        width: auto;
        height: 400px;
        background-size: auto 400px;
        background: url("../../img/green_phone_desk.jpg") no-repeat center center; } }
    @media only screen and (min-width: 600px) and (min--moz-device-pixel-ratio: 1.3), only screen and (min-width: 600px) and (-o-min-device-pixel-ratio: 2.6 / 2), only screen and (min-width: 600px) and (-webkit-min-device-pixel-ratio: 1.3), only screen and (min-width: 600px) and (min-device-pixel-ratio: 1.3), only screen and (min-width: 600px) and (min-resolution: 1.3dppx) {
      .broadband_landing .banner .carousel .slide1 {
        background-size: auto 400px;
        background-image: url("../../img/green_phone_desk@2x.jpg");
        background-position: center center; } }
  @media only screen and (min-width: 600px) {
      .broadband_landing .banner .carousel .slide2 {
        width: auto;
        height: 400px;
        background-size: auto 400px;
        background: url("../../img/earth_desk.jpg") no-repeat center center; } }
    @media only screen and (min-width: 600px) and (min--moz-device-pixel-ratio: 1.3), only screen and (min-width: 600px) and (-o-min-device-pixel-ratio: 2.6 / 2), only screen and (min-width: 600px) and (-webkit-min-device-pixel-ratio: 1.3), only screen and (min-width: 600px) and (min-device-pixel-ratio: 1.3), only screen and (min-width: 600px) and (min-resolution: 1.3dppx) {
      .broadband_landing .banner .carousel .slide2 {
        background-size: auto 400px;
        background-image: url("../../img/earth_desk@2x.jpg");
        background-position: center center; } }
  @media only screen and (min-width: 600px) {
    .broadband_landing .triple_feature {
      width: 33.03571%; }
      .broadband_landing .triple_feature.feature3 {
        width: 33.92857%; }
    .broadband_landing .large_feature {
      width: 50%;
      margin-bottom: -99999px;
      padding-bottom: 99999px; }
      .broadband_landing .large_feature.left {
        float: left; }
      .broadband_landing .large_feature.right {
        float: right; }
    .broadband_landing .testimonials_wrap {
      padding: 33px 0 31px; }
      .broadband_landing .testimonials_wrap h3 {
        padding-bottom: 43px; }
      .broadband_landing .testimonials_wrap .testimonial {
        padding: 0px 37px; } }

/*# sourceMappingURL=data:application/json;base64, */
